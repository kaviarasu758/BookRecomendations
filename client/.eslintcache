[{"C:\\MERN-Stack-Book-App\\client\\src\\index.js":"1","C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\index.js":"2","C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\NoMatch.jsx":"3","C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\index.js":"4","C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\Navbar.js":"5","C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\index.js":"6","C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\index.js":"7","C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\index.js":"8","C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\Footer.jsx":"9","C:\\MERN-Stack-Book-App\\client\\src\\pages\\Search.jsx":"10","C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\Results.jsx":"11","C:\\MERN-Stack-Book-App\\client\\src\\App.jsx":"12","C:\\MERN-Stack-Book-App\\client\\src\\pages\\Save.jsx":"13","C:\\MERN-Stack-Book-App\\client\\src\\pages\\BookCard.jsx":"14","C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\Loading.jsx":"15","C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\index.js":"16","C:\\MERN-Stack-Book-App\\client\\src\\components\\Signup.jsx":"17","C:\\MERN-Stack-Book-App\\client\\src\\utils\\GlobalContext.js":"18","C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\Error.jsx":"19","C:\\MERN-Stack-Book-App\\client\\src\\components\\Login.jsx":"20","C:\\BookRecomendations\\client\\src\\App.jsx":"21","C:\\BookRecomendations\\client\\src\\components\\Footer\\Footer.jsx":"22","C:\\BookRecomendations\\client\\src\\pages\\BookCard.jsx":"23","C:\\BookRecomendations\\client\\src\\components\\Results\\Results.jsx":"24","C:\\BookRecomendations\\client\\src\\components\\Login.jsx":"25","C:\\BookRecomendations\\client\\src\\pages\\Search.jsx":"26","C:\\BookRecomendations\\client\\src\\components\\NoMatch\\NoMatch.jsx":"27","C:\\BookRecomendations\\client\\src\\components\\Navbar\\Navbar.js":"28","C:\\BookRecomendations\\client\\src\\pages\\Save.jsx":"29","C:\\BookRecomendations\\client\\src\\components\\Signup.jsx":"30","C:\\BookRecomendations\\client\\src\\components\\Error\\Error.jsx":"31","C:\\BookRecomendations\\client\\src\\components\\Footer\\index.js":"32","C:\\BookRecomendations\\client\\src\\components\\Navbar\\index.js":"33","C:\\BookRecomendations\\client\\src\\components\\Loading\\index.js":"34","C:\\BookRecomendations\\client\\src\\components\\Loading\\Loading.jsx":"35","C:\\BookRecomendations\\client\\src\\index.js":"36","C:\\BookRecomendations\\client\\src\\components\\Error\\index.js":"37","C:\\BookRecomendations\\client\\src\\components\\Results\\index.js":"38","C:\\BookRecomendations\\client\\src\\utils\\GlobalContext.js":"39","C:\\BookRecomendations\\client\\src\\components\\ContactUs.jsx":"40","C:\\BookRecomendations\\client\\src\\components\\NoMatch\\index.js":"41","C:\\BookRecomendations\\client\\src\\components\\BestSellers.jsx":"42","C:\\BookRecomendations\\client\\src\\components\\BestSellerBookCard.jsx":"43"},{"size":238,"mtime":1730019173126,"results":"44","hashOfConfig":"45"},{"size":35,"mtime":1730018662707,"results":"46","hashOfConfig":"45"},{"size":368,"mtime":1729695483954,"results":"47","hashOfConfig":"45"},{"size":33,"mtime":1729695483949,"results":"48","hashOfConfig":"45"},{"size":1038,"mtime":1730002179915,"results":"49","hashOfConfig":"45"},{"size":37,"mtime":1729695483950,"results":"50","hashOfConfig":"45"},{"size":37,"mtime":1729695483953,"results":"51","hashOfConfig":"45"},{"size":35,"mtime":1729695483951,"results":"52","hashOfConfig":"45"},{"size":701,"mtime":1729743494539,"results":"53","hashOfConfig":"45"},{"size":8147,"mtime":1730024682602,"results":"54","hashOfConfig":"45"},{"size":12783,"mtime":1730023337702,"results":"55","hashOfConfig":"45"},{"size":1302,"mtime":1730019047808,"results":"56","hashOfConfig":"45"},{"size":2658,"mtime":1730002653169,"results":"57","hashOfConfig":"45"},{"size":1121,"mtime":1729749853441,"results":"58","hashOfConfig":"45"},{"size":509,"mtime":1729695483951,"results":"59","hashOfConfig":"45"},{"size":33,"mtime":1729695483954,"results":"60","hashOfConfig":"45"},{"size":3590,"mtime":1730005199542,"results":"61","hashOfConfig":"45"},{"size":786,"mtime":1730024786393,"results":"62","hashOfConfig":"45"},{"size":315,"mtime":1729695483948,"results":"63","hashOfConfig":"45"},{"size":3152,"mtime":1729766000549,"results":"64","hashOfConfig":"45"},{"size":2056,"mtime":1731165823428,"results":"65","hashOfConfig":"66"},{"size":1968,"mtime":1731217789316,"results":"67","hashOfConfig":"66"},{"size":1121,"mtime":1731250959602,"results":"68","hashOfConfig":"66"},{"size":12786,"mtime":1730042406937,"results":"69","hashOfConfig":"66"},{"size":3383,"mtime":1731216846686,"results":"70","hashOfConfig":"66"},{"size":3372,"mtime":1731207643051,"results":"71","hashOfConfig":"66"},{"size":368,"mtime":1729695483954,"results":"72","hashOfConfig":"66"},{"size":1038,"mtime":1731044689059,"results":"73","hashOfConfig":"66"},{"size":4932,"mtime":1731216780443,"results":"74","hashOfConfig":"75"},{"size":3442,"mtime":1731216809983,"results":"76","hashOfConfig":"66"},{"size":315,"mtime":1729695483948,"results":"77","hashOfConfig":"66"},{"size":37,"mtime":1731045087235,"results":"78","hashOfConfig":"66"},{"size":37,"mtime":1729695483953,"results":"79","hashOfConfig":"66"},{"size":35,"mtime":1729695483951,"results":"80","hashOfConfig":"66"},{"size":509,"mtime":1729695483951,"results":"81","hashOfConfig":"66"},{"size":238,"mtime":1731057438063,"results":"82","hashOfConfig":"66"},{"size":33,"mtime":1729695483949,"results":"83","hashOfConfig":"66"},{"size":35,"mtime":1730018662707,"results":"84","hashOfConfig":"66"},{"size":786,"mtime":1730024786393,"results":"85","hashOfConfig":"66"},{"size":2919,"mtime":1731216860659,"results":"86","hashOfConfig":"66"},{"size":33,"mtime":1729695483954,"results":"87","hashOfConfig":"66"},{"size":3157,"mtime":1731251341583,"results":"88","hashOfConfig":"66"},{"size":4127,"mtime":1731252407937,"results":"89","hashOfConfig":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nw0se3",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3nf0z1",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15wazgy",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MERN-Stack-Book-App\\client\\src\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\NoMatch.jsx",[],["187","188"],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\Footer.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\pages\\Search.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\Results.jsx",["189"],"// import React, { useEffect , useState} from 'react';\r\n// import { useGlobalContext } from '../../utils/GlobalContext';\r\n// import { Button, Container, Col, Row, Card } from 'react-bootstrap';\r\n// import { toast } from 'react-toastify';\r\n// import io from 'socket.io-client';\r\n\r\n// let socket;\r\n\r\n// function Results() {\r\n//     const [{ books }] = useGlobalContext(); // Destructure to get books\r\n\r\n//     // Set up socket instance and connection\r\n//     useEffect(() => {\r\n//         socket = io('http://localhost:3000'); // Ensure this URL matches your server setup\r\n\r\n//         socket.on('connect', () => {\r\n//             console.log('Connected to the socket server');\r\n//         });\r\n\r\n//         socket.on('saved book title', title => {\r\n//             toast.success(`Saved a book titled ${title}`, {\r\n//                 position: toast.POSITION.TOP_CENTER,\r\n//             });\r\n//         });\r\n\r\n//         socket.on('connect_error', err => {\r\n//             console.error('Socket connection error:', err);\r\n//         });\r\n\r\n//         return () => {\r\n//             socket.disconnect(); // Clean up on unmount\r\n//         };\r\n//     }, []);\r\n\r\n//     const handleSaveBook = async (book) => {\r\n//         try {\r\n//             const response = await fetch('http://localhost:3000/api/books', {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 method: 'POST',\r\n//                 body: JSON.stringify({\r\n//                     id: book.id,\r\n//                     title: book.volumeInfo.title,\r\n//                     authors: book.volumeInfo.authors,\r\n//                     description: book.volumeInfo.description,\r\n//                     infoLink: book.volumeInfo.infoLink,\r\n//                     image: book.volumeInfo.imageLinks?.thumbnail,\r\n//                 }),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 const errorJson = await response.json();\r\n//                 throw new Error(errorJson.message || 'Error saving the book');\r\n//             }\r\n\r\n//             const json = await response.json();\r\n\r\n//             if (json.success) {\r\n//                 socket.emit('save book', json.data.title);\r\n//             } else {\r\n//                 toast.warning('This book is already saved!', {\r\n//                     position: toast.POSITION.TOP_CENTER,\r\n//                 });\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error saving book:', error);\r\n//             toast.error('Error saving book: ' + error.message, {\r\n//                 position: toast.POSITION.TOP_CENTER,\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <Container className='my-5 p-3'>\r\n//             <Row className='mx-5'>\r\n//                 {books && books.map((book, index) => (\r\n//                     <Col key={index} className='mb-4'>\r\n//                         <Card style={{ width: '300px', height: '700px', backgroundColor: '#deeaf7' }} className='p-4'>\r\n//                             {book.volumeInfo.imageLinks && (\r\n//                                 <Card.Img\r\n//                                     variant='top'\r\n//                                     src={book.volumeInfo.imageLinks.thumbnail}\r\n//                                     style={{ height: 320 }}\r\n//                                 />\r\n//                             )}\r\n//                             <Card.Body>\r\n//                                 <Card.Title>{book.volumeInfo.title}</Card.Title>\r\n//                                 {book.volumeInfo.authors && (\r\n//                                     <Card.Title className='font-italic text-muted' style={{ fontSize: '1.1rem' }}>\r\n//                                         By: {book.volumeInfo.authors.join(', ')}\r\n//                                     </Card.Title>\r\n//                                 )}\r\n//                                 {book.volumeInfo.description && (\r\n//                                     <Card.Text>{book.volumeInfo.description.substr(0, 100)}</Card.Text>\r\n//                                 )}\r\n//                                 {book.volumeInfo.infoLink && (\r\n//                                     <Card.Text>\r\n//                                         <a href={book.volumeInfo.infoLink} target='_blank' rel='noreferrer'>\r\n//                                             View Details\r\n//                                         </a>\r\n//                                     </Card.Text>\r\n//                                 )}\r\n//                                 <div className='mt-4'>\r\n//                                     <Button size='sm' variant='warning' onClick={() => handleSaveBook(book)}>\r\n//                                         Save Book\r\n//                                     </Button>\r\n//                                 </div>\r\n//                             </Card.Body>\r\n//                         </Card>\r\n//                     </Col>\r\n//                 ))}\r\n//             </Row>\r\n//         </Container>\r\n//     );\r\n// }\r\n\r\n// export default Results;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useGlobalContext } from '../../utils/GlobalContext';\r\nimport { Button, Container, Col, Row, Card } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nfunction Results() {\r\n    const [{ books }] = useGlobalContext(); // Destructure to get books\r\n    const [recommendedBooks, setRecommendedBooks] = useState([]); // State for recommendations\r\n\r\n    // Set up socket instance and connection\r\n    useEffect(() => {\r\n        socket = io('http://localhost:3000'); // Ensure this URL matches your server setup\r\n\r\n        socket.on('connect', () => {\r\n            console.log('Connected to the socket server');\r\n        });\r\n\r\n        socket.on('saved book title', title => {\r\n            toast.success(`Saved a book titled ${title}`, {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n        });\r\n\r\n        socket.on('connect_error', err => {\r\n            console.error('Socket connection error:', err);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect(); // Clean up on unmount\r\n        };\r\n    }, []);\r\n\r\n    // Function to fetch recommendations\r\n    useEffect(() => {\r\n        const fetchRecommendations = async () => {\r\n            try {\r\n                const searchTerm = \"F. Scott Fitzgerald\"; // Use a relevant term\r\n                const response = await fetch('http://localhost:3000/api/recommendations');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setRecommendedBooks(data);\r\n                } else {\r\n                    console.warn('Failed to fetch recommendations:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching recommendations:', error);\r\n            }\r\n        };\r\n    \r\n        fetchRecommendations();\r\n    }, []); // The empty array ensures this runs only once on mount\r\n    \r\n\r\n    const handleSaveBook = async (book) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/books', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    id: book.id,\r\n                    title: book.volumeInfo.title,\r\n                    authors: book.volumeInfo.authors,\r\n                    description: book.volumeInfo.description,\r\n                    infoLink: book.volumeInfo.infoLink,\r\n                    image: book.volumeInfo.imageLinks?.thumbnail,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorJson = await response.json();\r\n                throw new Error(errorJson.message || 'Error saving the book');\r\n            }\r\n\r\n            const json = await response.json();\r\n\r\n            if (json.success) {\r\n                socket.emit('save book', json.data.title);\r\n            } else {\r\n                toast.warning('This book is already saved!', {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving book:', error);\r\n            toast.error('Error saving book: ' + error.message, {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <Container className='my-5 p-3'>\r\n            <Row className='mx-5'>\r\n                {books && books.map((book, index) => (\r\n                    <Col key={index} className='mb-4'>\r\n                        <Card style={{ width: '300px', height: '700px', backgroundColor: '#deeaf7' }} className='p-4'>\r\n                            {book.volumeInfo.imageLinks && (\r\n                                <Card.Img\r\n                                    variant='top'\r\n                                    src={book.volumeInfo.imageLinks.thumbnail}\r\n                                    style={{ height: 320 }}\r\n                                />\r\n                            )}\r\n                            <Card.Body>\r\n                                <Card.Title>{book.volumeInfo.title}</Card.Title>\r\n                                {book.volumeInfo.authors && (\r\n                                    <Card.Title className='font-italic text-muted' style={{ fontSize: '1.1rem' }}>\r\n                                        By: {book.volumeInfo.authors.join(', ')}\r\n                                    </Card.Title>\r\n                                )}\r\n                                {book.volumeInfo.description && (\r\n                                    <Card.Text>{book.volumeInfo.description.substr(0, 100)}</Card.Text>\r\n                                )}\r\n                                {book.volumeInfo.infoLink && (\r\n                                    <Card.Text>\r\n                                        <a href={book.volumeInfo.infoLink} target='_blank' rel='noreferrer'>\r\n                                            View Details\r\n                                        </a>\r\n                                    </Card.Text>\r\n                                )}\r\n                                <div className='mt-4'>\r\n                                    <Button size='sm' variant='warning' onClick={() => handleSaveBook(book)}>\r\n                                        Save Book\r\n                                    </Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n    \r\n            {/* Recommendations Section */}\r\n            <h3 className='my-5'>You May Also Like</h3>\r\n            <Row className='mx-5'>\r\n                {recommendedBooks.length > 0 ? (\r\n                    recommendedBooks.map((book, index) => (\r\n                        <Col key={index} className='mb-4'>\r\n                            <Card style={{ width: '300px', height: '700px', backgroundColor: '#deeaf7' }} className='p-4'>\r\n                                {book.image ? (\r\n                                    <Card.Img variant='top' src={book.image} style={{ height: 320 }} />\r\n                                ) : (\r\n                                    <Card.Img variant='top' src='default-thumbnail.jpg' style={{ height: 320 }} />\r\n                                )}\r\n                                <Card.Body>\r\n                                    <Card.Title>{book.title || 'Untitled'}</Card.Title>\r\n                                    {book.authors && (\r\n                                        <Card.Text className='font-italic text-muted'>\r\n                                            By: {book.authors.join(', ')}\r\n                                        </Card.Text>\r\n                                    )}\r\n                                    {book.infoLink && (\r\n                                        <Card.Text>\r\n                                            <a href={book.infoLink} target='_blank' rel='noreferrer'>\r\n                                                View Details\r\n                                            </a>\r\n                                        </Card.Text>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))\r\n                ) : (\r\n                    <p>No recommendations available.</p>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n    \r\n\r\n}\r\nexport default Results;\r\n","C:\\MERN-Stack-Book-App\\client\\src\\App.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\pages\\Save.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\pages\\BookCard.jsx",[],["190","191"],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\Loading.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\index.js",[],["192","193"],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Signup.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\utils\\GlobalContext.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\Error.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Login.jsx",[],"C:\\BookRecomendations\\client\\src\\App.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Footer\\Footer.jsx",[],"C:\\BookRecomendations\\client\\src\\pages\\BookCard.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Results\\Results.jsx",[],["194","195"],"C:\\BookRecomendations\\client\\src\\components\\Login.jsx",[],"C:\\BookRecomendations\\client\\src\\pages\\Search.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\NoMatch\\NoMatch.jsx",[],["196","197"],"C:\\BookRecomendations\\client\\src\\components\\Navbar\\Navbar.js",[],["198","199"],"C:\\BookRecomendations\\client\\src\\pages\\Save.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Signup.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Error\\Error.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Footer\\index.js",[],["200","201"],"C:\\BookRecomendations\\client\\src\\components\\Navbar\\index.js",[],["202","203"],"C:\\BookRecomendations\\client\\src\\components\\Loading\\index.js",[],["204","205"],"C:\\BookRecomendations\\client\\src\\components\\Loading\\Loading.jsx",[],"C:\\BookRecomendations\\client\\src\\index.js",[],"C:\\BookRecomendations\\client\\src\\components\\Error\\index.js",[],"C:\\BookRecomendations\\client\\src\\components\\Results\\index.js",[],"C:\\BookRecomendations\\client\\src\\utils\\GlobalContext.js",[],"C:\\BookRecomendations\\client\\src\\components\\ContactUs.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\NoMatch\\index.js",[],["206","207"],"C:\\BookRecomendations\\client\\src\\components\\BestSellers.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\BestSellerBookCard.jsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":161,"column":23,"nodeType":"214","messageId":"215","endLine":161,"endColumn":33},{"ruleId":"208","replacedBy":"216"},{"ruleId":"210","replacedBy":"217"},{"ruleId":"208","replacedBy":"218"},{"ruleId":"210","replacedBy":"219"},{"ruleId":"208","replacedBy":"220"},{"ruleId":"210","replacedBy":"221"},{"ruleId":"208","replacedBy":"222"},{"ruleId":"210","replacedBy":"223"},{"ruleId":"208","replacedBy":"224"},{"ruleId":"210","replacedBy":"225"},{"ruleId":"208","replacedBy":"226"},{"ruleId":"210","replacedBy":"227"},{"ruleId":"208","replacedBy":"228"},{"ruleId":"210","replacedBy":"229"},{"ruleId":"208","replacedBy":"230"},{"ruleId":"210","replacedBy":"231"},{"ruleId":"208","replacedBy":"232"},{"ruleId":"210","replacedBy":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'searchTerm' is assigned a value but never used.","Identifier","unusedVar",["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],"no-global-assign","no-unsafe-negation"]